// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebDevCWK.Models;

#nullable disable

namespace WebDevCWK.Migrations
{
    [DbContext(typeof(ProductivityContext))]
    [Migration("20240223165556_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("TeamsUsers", b =>
                {
                    b.Property<int>("TeamsTeamID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsersUserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("TeamsTeamID", "UsersUserID");

                    b.HasIndex("UsersUserID");

                    b.ToTable("TeamsUsers");
                });

            modelBuilder.Entity("WebDevCWK.Models.Milestones", b =>
                {
                    b.Property<int>("MilestoneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MilestoneDescription")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("MilestoneDueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("MilestoneName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.HasKey("MilestoneID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Milestones");
                });

            modelBuilder.Entity("WebDevCWK.Models.Projects", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ProjectDueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectStatus")
                        .HasColumnType("TEXT");

                    b.HasKey("ProjectID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("WebDevCWK.Models.Tasks", b =>
                {
                    b.Property<int>("TaskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TaskDescription")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TaskDueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TaskStatus")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UsersUserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("TaskID");

                    b.HasIndex("UsersUserID");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("WebDevCWK.Models.Teams", b =>
                {
                    b.Property<int>("TeamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProjectID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProjectsProjectID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TeamID");

                    b.HasIndex("ProjectsProjectID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("WebDevCWK.Models.UserRoles", b =>
                {
                    b.Property<int>("UserRoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserRoleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UsersUserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserRoleID");

                    b.HasIndex("UsersUserID");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("WebDevCWK.Models.Users", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TeamsUsers", b =>
                {
                    b.HasOne("WebDevCWK.Models.Teams", null)
                        .WithMany()
                        .HasForeignKey("TeamsTeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDevCWK.Models.Users", null)
                        .WithMany()
                        .HasForeignKey("UsersUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebDevCWK.Models.Milestones", b =>
                {
                    b.HasOne("WebDevCWK.Models.Projects", "Project")
                        .WithMany("Milestones")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("WebDevCWK.Models.Tasks", b =>
                {
                    b.HasOne("WebDevCWK.Models.Users", "Users")
                        .WithMany("Tasks")
                        .HasForeignKey("UsersUserID");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WebDevCWK.Models.Teams", b =>
                {
                    b.HasOne("WebDevCWK.Models.Projects", "Projects")
                        .WithMany()
                        .HasForeignKey("ProjectsProjectID");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("WebDevCWK.Models.UserRoles", b =>
                {
                    b.HasOne("WebDevCWK.Models.Users", "Users")
                        .WithMany("UserRoles")
                        .HasForeignKey("UsersUserID");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WebDevCWK.Models.Projects", b =>
                {
                    b.Navigation("Milestones");
                });

            modelBuilder.Entity("WebDevCWK.Models.Users", b =>
                {
                    b.Navigation("Tasks");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
